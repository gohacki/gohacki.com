/* src/styles/globals.css */

@import "open-props/easings.min.css";
/* src/styles/globals.css */
@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  --background: #ffffff;
  --foreground: #0a0a0a;
}

@media (prefers-color-scheme: dark) {
  :root {
    --background: #0a0a0a;
    --foreground: #ededed;
  }
}

body {
  color: var(--foreground);
  background: var(--background);
  font-family: 'Inter', sans-serif;
  overflow-x: hidden;
  transition: background 0.5s ease, color 0.5s ease;
}

/* Custom animations */
@keyframes fadeInUp {
  0% {
    opacity: 0;
    transform: translateY(20px);
  }
  100% {
    opacity: 1;
    transform: translateY(0);
  }
}

/* Utility classes for animations */
.animate-fadeInUp {
  animation: fadeInUp 0.8s ease-out forwards;
}

/* Draw Animation */
@keyframes draw {
  to {
    stroke-dashoffset: 0;
  }
}

/* Animation for draw-path */
.draw-path {
  stroke-dasharray: 2000; /* Increased for longer paths */
  stroke-dashoffset: 2000;
  animation: draw 8s ease forwards;
}

/* Staggered animation delays for each path */
.draw-path:nth-of-type(1) {
  animation-delay: 0s;
}

.draw-path:nth-of-type(2) {
  animation-delay: 1s;
}

.draw-path:nth-of-type(3) {
  animation-delay: 2s;
}

.draw-path:nth-of-type(4) {
  animation-delay: 3s;
}

.draw-path:nth-of-type(5) {
  animation-delay: 4s;
}

.draw-path:nth-of-type(6) {
  animation-delay: 5s;
}

/* Reduced Motion Preference */
@media (prefers-reduced-motion: reduce) {
  .animate-fadeInUp,
  .draw-path {
    animation: none;
  }
  
  path {
    stroke-dashoffset: 0;
  }
}

/* Gradient text utility */
.gradient-text {
  background: linear-gradient(to right, #6d28d9, #ec4899, #ef4444);
  -webkit-background-clip: text;
  color: transparent;
}

/* Glassmorphism-like background */
.glass {
  backdrop-filter: blur(10px);
  background: rgba(255, 255, 255, 0.6);
}

.dark .glass {
  background: rgba(0, 0, 0, 0.3);
}

:root {
  --background: #ffffff;
  --foreground: #0a0a0a;
  --icon-fill: #0a0a0a;
  --icon-fill-hover: #6d28d9;
}

[data-theme="dark"] {
  --background: #0a0a0a;
  --foreground: #ededed;
  --icon-fill: #ededed;
  --icon-fill-hover: #ec4899;
}

/* Sun and Moon Icon Styles */
.sun-and-moon > :is(.moon, .sun, .sun-beams) {
  transform-origin: center;
}

.sun-and-moon > :is(.moon, .sun) {
  fill: var(--icon-fill);
}

.theme-toggle:is(:hover, :focus-visible) > .sun-and-moon > :is(.moon, .sun) {
  fill: var(--icon-fill-hover);
}

.sun-and-moon > .sun-beams {
  stroke: var(--icon-fill);
  stroke-width: 2px;
}

.theme-toggle:is(:hover, :focus-visible) .sun-and-moon > .sun-beams {
  stroke: var(--icon-fill-hover);
}

[data-theme="dark"] .sun-and-moon > .sun {
  transform: scale(1.75);
}

[data-theme="dark"] .sun-and-moon > .sun-beams {
  opacity: 0;
}

[data-theme="dark"] .sun-and-moon > .moon > circle {
  transform: translateX(-7px);
}

@supports (cx: 1) {
  [data-theme="dark"] .sun-and-moon > .moon > circle {
    cx: 17;
    transform: translateX(0);
  }
}

@media (prefers-reduced-motion: no-preference) {
  .sun-and-moon > .sun {
    transition: transform .5s var(--ease-elastic-3);
  }

  .sun-and-moon > .sun-beams {
    transition: transform .5s var(--ease-elastic-4), opacity .5s var(--ease-3);
  }

  .sun-and-moon .moon > circle {
    transition: transform .25s var(--ease-out-5);
  }

  @supports (cx: 1) {
    .sun-and-moon .moon > circle {
      transition: cx .25s var(--ease-out-5);
    }
  }

  [data-theme="dark"] .sun-and-moon > .sun {
    transition-timing-function: var(--ease-3);
    transition-duration: .25s;
    transform: scale(1.75);
  }

  [data-theme="dark"] .sun-and-moon > .sun-beams {
    transition-duration: .15s;
    transform: rotateZ(-25deg);
  }

  [data-theme="dark"] .sun-and-moon > .moon > circle {
    transition-duration: .5s;
    transition-delay: .25s;
  }
}


/* Perspective for 3D flip effect */
.perspective {
  perspective: 1000px;
}

.preserve-3d {
  transform-style: preserve-3d;
}

.backface-hidden {
  backface-visibility: hidden;
}

.rotate-y-180 {
  transform: rotateY(180deg);
}

/* Spotify Embed Container with Gradient Overlay on Hover */
.spotify-embed-container {
  position: relative;
  border-radius: 0.5rem;
  overflow: hidden;
}

.spotify-embed-container::before {
  content: "";
  position: absolute;
  inset: 0;
  background: linear-gradient(135deg, #6d28d9, #ec4899, #ef4444);
  opacity: 0;
  transition: opacity 0.3s ease;
  pointer-events: none;
}

.spotify-embed-container:hover::before {
  opacity: 0.2;
}

/* Circular Layout for Hobbies */
@keyframes rotateIcons {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

.circular-hobbies {
  animation: rotateIcons 20s linear infinite;
}

.circular-hobbies:hover {
  animation-play-state: paused;
}

:root {
  --glitter: url("https://assets.codepen.io/13471/silver-glitter-background.png");
}

.sparkles {
  --clr: 260;
  --shadows: 0%;
  --shadowl: 0%;

  font-size: max(2vw, 0.875rem);
  font-weight: 700;
  letter-spacing: 0.5px;
  border-radius: 5em;
  background: linear-gradient(
      0deg,
      hsla(var(--clr), 100%, 70%) 0%,
      hsla(var(--clr), 100%, 65%) 5%,
      hsla(var(--clr), 80%, 35%) 15%,
      hsla(var(--clr), 10%, 0%) 40%,
      hsla(var(--clr), 25%, 12%) 90%
  );
  background-size: 200% 300%;
  background-position: 0% 0%;
  box-shadow: inset 0 0 2px hsla(var(--clr), 30%, 20%);
  display: grid;
  grid-template-columns: 1fr;
  grid-template-rows: 1fr;
  place-items: center;
  padding: 0;
  position: relative;
  overflow: hidden;
  transform: translate(0px);

  transition: all 0.5s cubic-bezier(0.77, 0, 0.18, 1);

  box-shadow: 
      0 -0.5em 0.5em transparent,
      0 0.5em 0.5em transparent,
      0 0.5em 0.5em transparent,
      0 0.5em 0.5em transparent,
      0 0.25em 0.3em -0.2em hsla(var(--clr), 0%, 0%, 0.5),
      0 0.35em 0.75em hsla(var(--clr), 0%, 0%, 0.75);
}

.sparkles::before,
.sparkles::after {
  --gradientPos: 50% 100%;
  content: " ";
  grid-column: 1;
  grid-row: 1;
  width: 100%;
  height: 100%;
  transition: inherit;
  border-radius: inherit;
  background: transparent;
}

.sparkles::before {
  inset: 0;
  position: absolute;
  transform: translate3d(0, 0, 0.01px);
  border-radius: inherit;

  background-image: var(--glitter), var(--glitter),
      linear-gradient(180deg, black 0%, white 80%);
  background-size: 300px 170px, 280px 130px, 200% 200%;
  background-blend-mode: multiply, multiply, overlay;
  background-position: 0px 0px, 0px 0px, var(--gradientPos);
  background-repeat: repeat;

  mix-blend-mode: color-dodge;
  filter: brightness(2) contrast(.75);
  animation: bubble 20s linear infinite;
  animation-play-state: paused;
  opacity: 0.5;
  box-shadow: inset 0 -8px 10px -7px hsla(var(--clr), 70%, 80%, 0.75);
}

.sparkles::after {
  background-image: radial-gradient(
          ellipse at center 70%,
          hsla(var(--clr), 100%, 99%, 0.8) 5%,
          hsla(var(--clr), 90%, 80%, 1) 20%,
          transparent 50%,
          transparent 200%
      ),
      linear-gradient(
          90deg,
          hsla(var(--clr), 80%, 10%, 1) -10%,
          transparent 25%,
          transparent 75%,
          hsla(var(--clr), 80%, 10%, 1) 110%
      );
  box-shadow: inset 0 0.25em 0.75em rgba(0, 0, 0, 1),
      inset 0 -0.05em 0.2em rgba(255, 255, 255, 0.4),
      inset 0 -1px 3px hsla(var(--clr), 80%, 50%, 0.75);
  background-blend-mode: darken;
  background-repeat: no-repeat;
  background-size: 180% 80%, cover;
  background-position: center 220%;
  mix-blend-mode: hard-light;
  filter: blur(5px);
  opacity: 0;
}

.sparkles:hover,
.sparkles.over {
  --shadows: 90%;
  --shadowl: 80%;
  background-position: 100% 100%;

  transition: all 0.2s cubic-bezier(0.17, 0.84, 0.44, 1);

  box-shadow: 
      0 -0.2em 1.5em hsla(var(--clr), 90%, 50%, 0.3),
      0 0.5em 2em hsla(var(--clr), 90%, 70%, 0.55),
      0 0.25em 0.3em -0.2em hsla(var(--clr), 0%, 0%, 1),
      0 0.35em 0.75em hsla(var(--clr), 0%, 0%, 1),
      0 0.25em 0.5em -0.3em hsl(var(--clr), 30%, 99%, 1),
      0 0.25em 0.5em hsla(var(--clr), 20%, 30%, 0.35),
      inset 0 -2px 5px -2px rgba(255, 255, 255, 0.5);
}

.sparkles.over {
  transition-duration: 2s;
}

.sparkles:hover::before,
.sparkles.over::before {
  --gradientPos: 50% 50%;
  animation-play-state: running;
  filter: brightness(2) contrast(1);
  box-shadow: inset 0 -5px 10px -4px hsla(var(--clr), 70%, 80%, 0.3);
  opacity: 0.8;
}

.sparkles:hover::after,
.sparkles.over::after {
  opacity: 0.8;
  transform: translateY(0px);
}

.sparkles span {
  grid-column: 1;
  grid-row: 1;
  background-image: linear-gradient(
      hsl(calc(var(--clr) - 43), 27%, 85%) 0%,
      hsl(calc(var(--clr) - 60), 22%, 80%) 19%,
      hsl(calc(var(--clr) - 50), 20%, 75%) 30%,
      hsl(calc(var(--clr) - 52), 36%, 98%) 43%,
      hsl(var(--clr), 70%, 70%, 1) 51%,
      hsl(var(--clr), 50%, 85%, 1) 52%,
      rgb(255, 255, 255) 100%
  );
  background-size: 1em 3.45em;
  color: rgb(214, 222, 226);
  -webkit-text-fill-color: transparent;
  -webkit-background-clip: text;
  filter: drop-shadow(0 0 0.05em rgba(0,0,0,0.5)) drop-shadow(0 0.05em 0.05em rgba(0,0,0,0.5));
  transition-timing-function: inherit;
  transition-duration: inherit;
  transition-delay: 0s;
  padding: 0.75em 1.5em;
  transform: translateY(0);
  z-index: 10;
}

.sparkles:hover span,
.sparkles:active span,
.sparkles.over span {
  background-position-y: -100%;
}

.sparkles:active {
  transform: translateY(0.075em);
  box-shadow:
      0 -0.2em 1.5em hsla(var(--clr), 90%, 50%, 0.4),
      0 0.5em 2em hsla(var(--clr), 90%, 70%, 0.65),
      0 0.15em 0.3em -0.2em hsla(var(--clr), 0%, 0%, 1),
      0 0.25em 0.75em hsla(var(--clr), 0%, 0%, 1),
      0 0.25em 0.5em -0.3em hsl(var(--clr), 30%, 99%, 1),
      0 0.25em 0.5em hsla(var(--clr), 20%, 30%, 0.45),
      inset 0 -2px 5px -2px rgba(255, 255, 255, 0.65);
  transition-duration: 0.1s;
}

.sparkles:active::before,
.sparkles:active::after {
  opacity: 1;
  filter: brightness(3) contrast(.75);
  animation-duration: 8s;
}

.sparkles:active::after {
  filter: brightness(1.35) contrast(.8) blur(5px);
}

/* Bubble Animation */
@keyframes bubble {
  0% {
      background-position: 0px 340px, 0px 130px, var(--gradientPos);
  }
  100% {
      background-position: 0px 0px, 0px 0px, var(--gradientPos);
  }
}